{"ast":null,"code":"var _jsxFileName = \"/home/rails/Desktop/parking_app/src/Context/DataContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { createContext } from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contextDefaultValues = {\n  parkingSlots: [],\n  userInput: '',\n  setUserInput: () => undefined,\n  open: false,\n  value: 0,\n  setValue: () => undefined,\n  setOpen: () => undefined,\n  setForm: () => undefined,\n  price: 0,\n  time: 2,\n  setTime: () => undefined,\n  setPrice: () => undefined,\n  form: {\n    registration: \"\",\n    time: \"\"\n  },\n  handleSubmit: () => {},\n  handleSubmit2: () => {}\n};\nconst DataContext = /*#__PURE__*/createContext(contextDefaultValues);\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let navigate = useNavigate();\n  const [userInput, setUserInput] = useState(\"\");\n  const [form, setForm] = useState({\n    registration: \"\",\n    time: \"\"\n  });\n  const [parkingSlots, setParkingSlots] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [price, setPrice] = useState(20);\n  const [time, setTime] = useState(2);\n  const [value, setValue] = useState(0);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let data = [];\n\n    for (let i = 1; i <= Number(userInput); i++) {\n      data.push({\n        id: i,\n        isAlloted: false\n      });\n    }\n\n    navigate(\"/layout\");\n    setParkingSlots(data);\n    console.log(data);\n  };\n\n  const handleSubmit2 = e => {\n    e.preventDefault();\n    let bookingSlots = [...parkingSlots];\n    let randObj = bookingSlots[Math.floor(Math.random() * parkingSlots.length)];\n\n    if (value !== bookingSlots.length) {\n      for (let i = 0; i < bookingSlots.length; i++) {\n        if (bookingSlots[i].id === randObj.id) {\n          if (!randObj.isAlloted) {\n            randObj.isAlloted = true;\n            randObj.registration = form.registration;\n            randObj.time = form.time;\n          } else {\n            let obj = bookingSlots.find(e => e.isAlloted === false);\n            obj.isAlloted = true;\n          }\n        }\n\n        console.log(bookingSlots);\n        setValue(value + 1);\n      }\n    } else {\n      const notify = () => toast(\"Parking is full\");\n\n      notify();\n    }\n\n    console.log(bookingSlots);\n    setParkingSlots(bookingSlots);\n    setForm({\n      registration: \"\",\n      time: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      userInput,\n      handleSubmit,\n      parkingSlots,\n      open,\n      price,\n      form,\n      handleSubmit2,\n      setUserInput,\n      setOpen,\n      setForm,\n      setPrice,\n      time,\n      setTime,\n      value,\n      setValue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DataProvider, \"Ysfs3e8fVRS6+b8uleKcr/uZK9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DataProvider;\nexport default DataContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useNavigate","toast","contextDefaultValues","parkingSlots","userInput","setUserInput","undefined","open","value","setValue","setOpen","setForm","price","time","setTime","setPrice","form","registration","handleSubmit","handleSubmit2","DataContext","DataProvider","children","navigate","setParkingSlots","e","preventDefault","data","i","Number","push","id","isAlloted","console","log","bookingSlots","randObj","Math","floor","random","length","obj","find","notify"],"sources":["/home/rails/Desktop/parking_app/src/Context/DataContext.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport {createContext} from 'react'\nimport { ParkingContextState } from './types'\nimport {useState} from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst contextDefaultValues : ParkingContextState = {\n    parkingSlots: [],\n    userInput: '',\n    setUserInput: () => undefined,\n    open: false,\n    value : 0,\n    setValue :() => undefined,\n    setOpen : () => undefined,\n    setForm : () => undefined,\n    price: 0,\n    time : 2,\n    setTime : () => undefined,\n    setPrice : () => undefined,\n    form: {\n        registration: \"\",\n        time: \"\"\n    },\n    handleSubmit: () => {},\n    handleSubmit2: () => {}\n\n} \n\ninterface Props {\n    children?: ReactNode\n}\n\nconst DataContext = createContext<ParkingContextState >(contextDefaultValues)\n\n\nexport const DataProvider = ({children} :Props) => {\n\n    let navigate = useNavigate();\n    const [userInput, setUserInput] = useState<string>(\"\");\n    const [form, setForm] = useState<{ registration: string; time: string }>({\n      registration: \"\",\n      time: \"\",\n    });\n    const [parkingSlots, setParkingSlots] = useState<any>([]);\n    const [open , setOpen] = useState<boolean>(false)\n    const [price , setPrice ] = useState<number>(20)\n    const [time , setTime] = useState<number>(2)\n    const [value , setValue] = useState<number>(0)\n  \n  \n    const handleSubmit = (e: React.FormEvent) => {\n      e.preventDefault();\n      let data = [];\n      for (let i = 1; i <= Number(userInput); i++) {\n        data.push({ id: i, isAlloted: false  });\n      }\n      navigate(\"/layout\" );\n      setParkingSlots(data);\n      console.log(data);\n    };\n  \n   \n    const handleSubmit2 = (e: React.FormEvent) => {\n      e.preventDefault();\n\n      let bookingSlots= [...parkingSlots];\n      let randObj = bookingSlots[Math.floor(Math.random() * parkingSlots.length)];\n     \n      if(value !== bookingSlots.length){\n        for(let i=0;i< bookingSlots.length;i++){\n            if(bookingSlots[i].id === randObj.id){ \n           if(!randObj.isAlloted){\n             randObj.isAlloted = true;\n             randObj.registration = form.registration;\n             randObj.time = form.time;\n           }\n           else{\n             let obj = bookingSlots.find((e:any)=> e.isAlloted === false);\n             obj.isAlloted = true;\n           }}\n           console.log(bookingSlots);\n           setValue(value+1);\n        }\n       }\n       else{\n         const notify = () => toast(\"Parking is full\");\n            notify();\n       }\n       console.log(bookingSlots)\n    setParkingSlots(bookingSlots);\n    setForm({ registration: \"\", time: \"\" });\n    };\n  \n     return(\n         <DataContext.Provider value = {{\n          userInput,  handleSubmit , parkingSlots, open  , price , form , handleSubmit2, setUserInput,\n         setOpen, setForm, setPrice , time , setTime, value, setValue\n         }}>\n             {children}\n\n         </DataContext.Provider>\n     ) \n }\n export default DataContext"],"mappings":"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"},"metadata":{},"sourceType":"module"}